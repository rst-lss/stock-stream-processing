---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka-headless
  replicas: 2
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: kafka-internal
          readinessProbe:
            tcpSocket:
              port: 9092
            timeoutSeconds: 5
            periodSeconds: 5
            initialDelaySeconds: 20
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - kafka-broker-api-versions.sh --bootstrap-server=localhost:9093
            timeoutSeconds: 5
            periodSeconds: 5
            initialDelaySeconds: 20
          env:
            - name: KAFKA_BROKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_CFG_LISTENERS
              value: INTERNAL://:9093,EXTERNAL://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: INTERNAL://$(POD_NAME).kafka-headless.$(POD_NAMESPACE).svc.cluster.local:9093,EXTERNAL://$(POD_NAME).kafka-headless.$(POD_NAMESPACE).svc.cluster.local:9092
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: ALLOW_PLAINTEXT_LISTENER
              value: 'yes'
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-headless
  labels:
    app: kafka
spec:
  ports:
    - port: 9092
      name: kafka
    - port: 9093
      name: kafka-internal
  clusterIP: None
  selector:
    app: kafka
